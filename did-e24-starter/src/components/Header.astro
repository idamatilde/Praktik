---
---
<section class="bg-[#357868]">
<div class="burger-menu">
  <div class="bar"></div>
  <div class="bar"></div>
  <div class="bar"></div>
</div>
<div class="header_nav_container px-28 py-[6px]">
  <div id="nav-bar-top">
    <nav class="topnav flex flex-row content-center items-center justify-between">
      <a class="text-white scroll" href="#HvemErJeg">Hvem er jeg?</a>
      <a class="text-white scroll" href="#Kompetencer">Kompetencer</a>
      <a class="text-white scroll" href="#HvadJegSoger">Tidligere projekter</a>
      <a class="text-white scroll" href="#Kontakt">Kontakt mig</a>
    </nav>
  </div>
</div>
<div class="scroll_indicator">
  <div class="simple_container">
    <div class="simple_indicator"></div>
  </div>
</div>
</section>
<style>
.simple_container {
      width: 100%;
      height: 0.3rem;
      background-color: none;
    }
  .simple_indicator {
      width: 0%;
      height: 100%;
      background-color:#FB3BA5;}
  .header_nav_container {
    position: sticky;
    top: 0;
    z-index: 9999;
  }
  #nav-bar-top {
    text-align: center;
    margin: 0 auto;
    left: 0px;
    right: 0px;
    float: clear;
  }
  .topnav {
    flex-wrap: wrap;
  }
  a {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .burger-menu {
    cursor: pointer;
    z-index: 2;
    display: none; /* Hide the burger menu icon by default */
    cursor: pointer;
    position: fixed; /* Position the burger menu fixed to the viewport */
    top: 20px; /* Adjust the distance from the top */
    right: 20px; /* Adjust the distance from the right */
    z-index: 9999; /* Ensure the burger menu appears above other content */
  }

  .bar {
    width: 25px;
    height: 3px;
    background-color: #FB3BA5;
    margin: 5px 0;
    transition: 0.4s;
  }

  /* Add hover effect to the burger menu lines */
  .bar:hover {
    transform: scale(1.1);
  }

  @media (max-width: 768px) {
    .topnav {
      display: none; /* Hide the navigation links by default on smaller screens */
    }

    .topnav.active {
      display: flex; /* Show the navigation links when burger menu is clicked */
    }

    .burger-menu {
      display: block; /* Show the burger menu icon on smaller screens */
    }
  
  }
</style>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const burgerMenu = document.querySelector(".burger-menu");
    const navLinks = document.querySelector(".topnav");

    burgerMenu.addEventListener("click", function () {
      navLinks.classList.toggle("active");
    });
  });
</script>
<script>
  window.addEventListener("scroll", onScroll);

  function onScroll() {
    let scrolled =
      document.body.scrollTop || document.documentElement.scrollTop;
    let height =
      document.documentElement.scrollHeight -
      document.documentElement.clientHeight;
    let scrolledfactor = scrolled / height;
    document.querySelector(".simple_indicator").style.width =
      `${scrolledfactor * 100}%`;
  }
</script>
<script>
  document.addEventListener("DOMContentLoaded", () => {
  "use strict";

  const root = (() => {
    if ("scrollingElement" in document) return document.scrollingElement;
    const html = document.documentElement;
    const start = html.scrollTop;
    html.scrollTop = start + 1;
    const end = html.scrollTop;
    html.scrollTop = start;
    return end > start ? html : document.body;
  })();

  const ease = (duration, elapsed, start, end) =>
    Math.round(end * (-Math.pow(2, -10 * elapsed/duration) + 1) + start);

  const getCoordinates = hash => {
    const start = root.scrollTop;
    const delta = (() => {
      if (hash.length < 2) return -start;
      const target = document.querySelector(hash);
      if (!target) return;
      const top = target.getBoundingClientRect().top;
      const max = root.scrollHeight - window.innerHeight;
      return start + top < max ? top : max - start;
    })();
    if (delta) return new Map([["start", start], ["delta", delta]]);
  };

  const scroll = link => {
    const hash = link.getAttribute("href");
    const coordinates = getCoordinates(hash);
    if (!coordinates) return;

    const tick = timestamp => {
      progress.set("elapsed", timestamp - start);
      root.scrollTop = ease(...progress.values(), ...coordinates.values());
      progress.get("elapsed") < progress.get("duration")
      ? requestAnimationFrame(tick)
      : complete(hash, coordinates);
    };

    const progress = new Map([["duration", 800]]);
    const start = performance.now();
    requestAnimationFrame(tick);
  };

  const complete = (hash, coordinates) => {
    history.pushState(null, null, hash);
    root.scrollTop = coordinates.get("start") + coordinates.get("delta");
  };

  const attachHandler = (links, index) => {
    const link = links.item(index);
    link.addEventListener("click", event => {
      event.preventDefault();
      scroll(link);
    });
    if (index) return attachHandler(links, index - 1);
  };

  const links = document.querySelectorAll("a.scroll");
  const last = links.length - 1;
  if (last < 0) return;
  attachHandler(links, last);
});
</script>

<!-- ---
---
<section>
<div class="bg-[#357868]">
<section class="px-28 py-[6px]">
    <nav class="flex flex-row content-center items-center justify-between">
      <a class="text-white" href="#HvemErJeg">Hvem er jeg?</a>
      <a class="text-white" href="#Kompetencer">Kompetencer</a>
      <a class="text-white" href="#HvadJegSoger">Hvad jeg s√∏ger</a>
      <a class="text-white" href="#sec3">Kontakt mig</a>
  </nav>
</section>
  </div>
<div class="simple_container">
    <div class="simple_indicator"></div>
  </div>
</section>

  <script>
    window.addEventListener("scroll", onScroll);
  
    function onScroll() {
      let scrolled =
        document.body.scrollTop || document.documentElement.scrollTop;
      let height =
        document.documentElement.scrollHeight -
        document.documentElement.clientHeight;
      let scrolledfactor = scrolled / height;
      document.querySelector(".simple_indicator").style.width =
        `${scrolledfactor * 100}%`;
    }
  </script>
  <style>
    .simple_container {
      width: 100%;
      height: 0.3rem;
      background-color: none;
    }
    .simple_indicator {
      width: 0%;
      height: 100%;
      background-color:#FB3BA5;
    }
  </style> -->